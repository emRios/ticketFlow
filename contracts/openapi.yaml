openapi: 3.0.3

info:
  title: TicketFlow API
  version: 0.1.0
  description: API para sistema de gestión de tickets con tablero Kanban
  contact:
    name: TicketFlow Team
    email: dev@ticketflow.com

servers:
  - url: http://localhost:5000
    description: Desarrollo local
  - url: http://localhost:8080
    description: Desarrollo local (alternativo)

tags:
  - name: Tickets
    description: Operaciones sobre tickets
  - name: Users
    description: Operaciones sobre usuarios
  - name: Audit
    description: Logs de auditoría

security:
  - bearerAuth: []

paths:
  /tickets:
    post:
      tags:
        - Tickets
      summary: Crear un nuevo ticket
      operationId: createTicket
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTicketRequest'
      responses:
        '201':
          description: Ticket creado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TicketDetail'
        '400':
          description: Datos inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: No autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    get:
      tags:
        - Tickets
      summary: Obtener lista de tickets con filtros
      operationId: getTickets
      parameters:
        - name: status
          in: query
          description: Filtrar por estado
          schema:
            type: string
            enum: [NEW, IN_PROGRESS, ON_HOLD, RESOLVED]
        - name: assignedTo
          in: query
          description: Filtrar por agente asignado (ID)
          schema:
            type: string
        - name: scope
          in: query
          description: Alcance de visibilidad
          schema:
            type: string
            enum: [assigned, team, all]
            default: assigned
        - name: page
          in: query
          description: Número de página (paginación)
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: pageSize
          in: query
          description: Elementos por página
          schema:
            type: integer
            minimum: 10
            maximum: 100
            default: 20
      responses:
        '200':
          description: Lista de tickets
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/TicketSummary'
                  total:
                    type: integer
                    description: Total de tickets (para paginación)
                  page:
                    type: integer
                  pageSize:
                    type: integer
        '401':
          description: No autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /tickets/{id}/status:
    patch:
      tags:
        - Tickets
      summary: Cambiar estado de un ticket
      operationId: changeTicketStatus
      parameters:
        - name: id
          in: path
          required: true
          description: ID del ticket
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - status
              properties:
                status:
                  type: string
                  enum: [NEW, IN_PROGRESS, ON_HOLD, RESOLVED]
      responses:
        '200':
          description: Estado actualizado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TicketDetail'
        '400':
          description: Datos inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: No autorizado (rol insuficiente)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Ticket no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Transición de estado inválida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Regla de negocio violada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /tickets/{id}:
    patch:
      tags:
        - Tickets
      summary: Asignar ticket a un agente
      operationId: assignTicket
      parameters:
        - name: id
          in: path
          required: true
          description: ID del ticket
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - assigneeId
              properties:
                assigneeId:
                  type: string
                  description: ID del agente a asignar
      responses:
        '200':
          description: Ticket asignado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TicketDetail'
        '400':
          description: Datos inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Ticket o agente no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /tickets/{id}/tags:
    post:
      tags:
        - Tickets
      summary: Agregar tag a un ticket
      operationId: addTagToTicket
      parameters:
        - name: id
          in: path
          required: true
          description: ID del ticket
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - tagId
              properties:
                tagId:
                  type: string
                  description: ID del tag a agregar
      responses:
        '200':
          description: Tag agregado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TicketDetail'
        '400':
          description: Datos inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Ticket o tag no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Tag ya está asignado al ticket
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /tickets/{id}/tags/{tagId}:
    delete:
      tags:
        - Tickets
      summary: Remover tag de un ticket
      operationId: removeTagFromTicket
      parameters:
        - name: id
          in: path
          required: true
          description: ID del ticket
          schema:
            type: string
        - name: tagId
          in: path
          required: true
          description: ID del tag a remover
          schema:
            type: string
      responses:
        '204':
          description: Tag removido exitosamente
        '404':
          description: Ticket o tag no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /tickets/{id}/audit-logs:
    get:
      tags:
        - Audit
      summary: Obtener historial de cambios de un ticket
      operationId: getTicketAuditLogs
      parameters:
        - name: id
          in: path
          required: true
          description: ID del ticket
          schema:
            type: string
        - name: page
          in: query
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: pageSize
          in: query
          schema:
            type: integer
            minimum: 10
            maximum: 100
            default: 50
      responses:
        '200':
          description: Logs de auditoría del ticket
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuditLog'
                  total:
                    type: integer
                  page:
                    type: integer
                  pageSize:
                    type: integer
        '404':
          description: Ticket no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /users:
    get:
      tags:
        - Users
      summary: Obtener lista de usuarios (agentes disponibles)
      operationId: getUsers
      parameters:
        - name: role
          in: query
          description: Filtrar por rol
          schema:
            type: string
            enum: [ADMIN, AGENT, CLIENT]
        - name: isActive
          in: query
          description: Filtrar por estado activo
          schema:
            type: boolean
      responses:
        '200':
          description: Lista de usuarios
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserSummary'
        '401':
          description: No autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: Token JWT obtenido del endpoint de autenticación

  schemas:
    # Request DTOs
    CreateTicketRequest:
      type: object
      required:
        - title
        - priority
      properties:
        title:
          type: string
          minLength: 3
          maxLength: 200
          description: Título del ticket
        description:
          type: string
          maxLength: 2000
          description: Descripción detallada (opcional)
        priority:
          type: string
          enum: [LOW, MEDIUM, HIGH, URGENT]
          description: Prioridad del ticket
        tags:
          type: array
          items:
            type: string
          description: IDs de tags a asociar (opcional)

    # Response DTOs
    TicketSummary:
      type: object
      required:
        - id
        - code
        - title
        - status
        - priority
        - createdAt
        - updatedAt
      properties:
        id:
          type: string
          description: ID interno del ticket
        code:
          type: string
          description: Código visible del ticket (ej TF-1024)
        title:
          type: string
          description: Título del ticket
        status:
          type: string
          enum: [NEW, IN_PROGRESS, ON_HOLD, RESOLVED]
          description: Estado actual del ticket
        priority:
          type: string
          enum: [LOW, MEDIUM, HIGH, URGENT]
          description: Prioridad del ticket
        assignedTo:
          $ref: '#/components/schemas/UserReference'
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        createdAt:
          type: string
          format: date-time
          description: Fecha de creación (ISO 8601 UTC)
        updatedAt:
          type: string
          format: date-time
          description: Última actualización (ISO 8601 UTC)

    TicketDetail:
      allOf:
        - $ref: '#/components/schemas/TicketSummary'
        - type: object
          properties:
            description:
              type: string
              description: Descripción detallada del ticket
            creator:
              $ref: '#/components/schemas/UserReference'
            closedAt:
              type: string
              format: date-time
              description: Fecha de cierre (solo si status=RESOLVED)
            capabilities:
              $ref: '#/components/schemas/TicketCapabilities'

    TicketCapabilities:
      type: object
      description: Permisos del usuario actual sobre el ticket
      properties:
        canMove:
          type: boolean
          description: Puede mover a otra columna
        canReorder:
          type: boolean
          description: Puede reordenar en misma columna
        canAssign:
          type: boolean
          description: Puede asignar a otro agente
        canAddTag:
          type: boolean
          description: Puede agregar tags
        canRemoveTag:
          type: boolean
          description: Puede remover tags
        allowedTransitions:
          type: array
          items:
            type: string
          description: Estados permitidos para transición

    AuditLog:
      type: object
      required:
        - id
        - action
        - at
        - afterJson
      properties:
        id:
          type: string
          description: ID único del log
        actor:
          $ref: '#/components/schemas/UserReference'
        action:
          type: string
          description: Acción realizada (ej created, status_changed, assigned)
        beforeJson:
          type: object
          description: Estado anterior (null en creación)
        afterJson:
          type: object
          description: Estado posterior
        at:
          type: string
          format: date-time
          description: Timestamp del cambio (ISO 8601 UTC)
        correlationId:
          type: string
          description: ID para rastreo distribuido

    UserSummary:
      type: object
      required:
        - id
        - name
        - email
        - role
        - isActive
      properties:
        id:
          type: string
          description: ID único del usuario
        name:
          type: string
          description: Nombre completo
        email:
          type: string
          format: email
          description: Correo electrónico
        role:
          type: string
          enum: [ADMIN, AGENT, CLIENT]
          description: Rol del usuario
        isActive:
          type: boolean
          description: Estado activo/inactivo

    UserReference:
      type: object
      description: Referencia simplificada a un usuario
      properties:
        id:
          type: string
        name:
          type: string
        avatarUrl:
          type: string
          format: uri
          description: URL del avatar (opcional)

    Tag:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: string
          description: ID único del tag
        name:
          type: string
          description: Nombre del tag
        color:
          type: string
          pattern: '^#[0-9A-Fa-f]{6}$'
          description: Color en formato hex (ej #ef4444)

    Error:
      type: object
      required:
        - error
        - message
      properties:
        error:
          type: string
          description: Código de error (ej VALIDATION_ERROR, NOT_FOUND)
        message:
          type: string
          description: Mensaje descriptivo del error
        details:
          type: object
          description: Información adicional del error (opcional)
        timestamp:
          type: string
          format: date-time
          description: Timestamp del error
        correlationId:
          type: string
          description: ID para rastreo del error
